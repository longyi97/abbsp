<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruiec.web.dao.UserPointsMapper">
  <resultMap id="BaseResultMap" type="com.ruiec.web.model.UserPoints">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="points" jdbcType="REAL" property="points" />
    <result column="history_points" jdbcType="REAL" property="historyPoints" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_time, modify_time, user_id, points, history_points
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from ruiec_user_points
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ruiec_user_points
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ruiec.web.model.UserPoints">
    insert into ruiec_user_points (id, create_time, modify_time, 
      user_id, points, history_points
      )
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{modifyTime,jdbcType=TIMESTAMP}, 
      #{userId,jdbcType=INTEGER}, #{points,jdbcType=REAL}, #{historyPoints,jdbcType=REAL}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ruiec.web.model.UserPoints">
    insert into ruiec_user_points
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="points != null">
        points,
      </if>
      <if test="historyPoints != null">
        history_points,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="points != null">
        #{points,jdbcType=REAL},
      </if>
      <if test="historyPoints != null">
        #{historyPoints,jdbcType=REAL},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ruiec.web.model.UserPoints">
    update ruiec_user_points
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="points != null">
        points = #{points,jdbcType=REAL},
      </if>
      <if test="historyPoints != null">
        history_points = #{historyPoints,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ruiec.web.model.UserPoints">
    update ruiec_user_points
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      user_id = #{userId,jdbcType=INTEGER},
      points = #{points,jdbcType=REAL},
      history_points = #{historyPoints,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
   <!-- ZhiyongGuo -->
  <sql id="Table_Name">
  	ruiec_user_points
  </sql>
  
  <select id="selectAll" resultMap="BaseResultMap">
    SELECT 
    <include refid="Base_Column_List" />
    FROM
    <include refid="Table_Name" />
  </select>
  
  <select id="selectByPage" parameterType="com.ruiec.web.model.UserPoints" resultMap="BaseResultMap">
    SELECT up.*,u.username
    FROM
    ruiec_user_points up
    LEFT JOIN ruiec_user u ON up.user_id = u.id
  	<where>
		<if test="username!=null">
		     and u.username like "%"#{username}"%"
		</if>
	</where>
	<if test="conditionsSort==4">
	order by points
	</if>
	<if test="conditionsSort==7">
	order by points desc
	</if>
	<if test="conditionsSort==5">
	order by history_points
	</if>
	<if test="conditionsSort==8">
	order by history_points desc
	</if>
	<if test="conditionsSort==null">
	order by id desc
	</if>
  </select>
  
  <select id="selectByUsername" parameterType="com.ruiec.web.model.UserPoints" resultMap="BaseResultMap">
    SELECT *
    FROM
    ruiec_user
    where username = #{username}
  </select>
    
  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM ruiec_user_points
    WHERE user_id = #{userId,jdbcType=INTEGER} FOR UPDATE
  </select>
  
  <update id="updateByUserId" parameterType="com.ruiec.web.model.UserPoints">
    UPDATE ruiec_user_points
    SET points = (SELECT SUM(change_points) FROM ruiec_user_points_detail WHERE user_id = #{userId,jdbcType=INTEGER}),
    history_points = (SELECT SUM(change_points) FROM ruiec_user_points_detail WHERE user_id = #{userId,jdbcType=INTEGER} and change_points > 0)
    WHERE user_id = #{userId,jdbcType=INTEGER}
  </update>
  
	<!-- /ZhiyongGuo -->
</mapper>