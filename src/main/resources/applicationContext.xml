<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/task  
	   http://www.springframework.org/schema/task/spring-task-3.1.xsd
       http://www.springframework.org/schema/cache 
       http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">
	<!-- 加载配置参数 -->
	<context:property-placeholder location="classpath*:/ruiec.properties" ignore-resource-not-found="true" ignore-unresolvable="true" />
	<!-- 扫描需要spring管理的对象 -->
	<context:component-scan base-package="com.ruiec">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
		
	<bean id="imageCaptchaService" class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">
		<constructor-arg type="com.octo.captcha.service.captchastore.CaptchaStore" index="0">
			<bean class="com.octo.captcha.service.captchastore.EhcacheCaptchaStore">
				<constructor-arg type="net.sf.ehcache.Cache" index="0" value="#{T(com.ruiec.framework.web.util.CaptchaUtils).getCaptchaCache()}" />
			</bean>
		</constructor-arg>
		<!-- which captcha Engine you use -->
		<constructor-arg type="com.octo.captcha.engine.CaptchaEngine" index="1">
			<bean class="com.ruiec.framework.web.captcha.ImageEngine"></bean>
		</constructor-arg>
		<constructor-arg index="2">
			<value>180</value>
		</constructor-arg>
		<constructor-arg index="3">
			<value>100000</value>
		</constructor-arg>
		<constructor-arg index="4">
			<value>75000</value>
		</constructor-arg>
	</bean>
	
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driver}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialPoolSize" value="${connection_pools.initial_pool_size}" />
		<property name="minPoolSize" value="${connection_pools.min_pool_size}" />
		<property name="maxPoolSize" value="${connection_pools.max_pool_size}" />
		<property name="maxIdleTime" value="${connection_pools.max_idle_time}" />
		<property name="acquireIncrement" value="${connection_pools.acquire_increment}" />
		<property name="checkoutTimeout" value="${connection_pools.checkout_timeout}" />
	</bean>
	
	<!-- hibernate命名策略 -->
	<bean id="namingStrategy" class="com.ruiec.framework.server.support.hibernate.NamingStrategy"/>
	
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="java.lang.System" />
		<property name="targetMethod" value="setProperty" />
		<property name="arguments">
			<list>
				<value>system.project_name</value>
				<value>${system.project_name}</value>
			</list>
		</property>
	</bean>
	
	<!-- myBatis文件   -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描entity目录, 省掉Configuration.xml里的手工配置  --> 
        <property name="mapperLocations" value="classpath:com/ruiec/web/mapper/*.xml" />
        <property name="typeAliasesPackage" value="com.ruiec.web.model"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            dialect=mysql
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>
    
    <!-- DAO接口所在包名，Spring会自动查找其下的类   -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.ruiec.web.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean> 
	
	<!-- 声明式事务配置（采用注解方式配置） -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 就是生成代理bean时以接口类还是实现类(实现类中使用了事务注解，没有使用Transactional注解则没有此要求)，以实现类则需要添加 proxy-target-class="true"
	ehcache缓存配置 -->
	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:/ehcache.xml" />
		<property name="shared" value="true" />
	</bean>
	
	<!-- spring缓存管理器 -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="ehCacheManager" />
	</bean>
	
	<!-- 声明式缓存配置 -->
	<cache:annotation-driven cache-manager="cacheManager" />
   
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="${task.core_pool_size}" />
		<property name="maxPoolSize" value="${task.max_pool_size}" />
		<property name="queueCapacity" value="${task.queue_capacity}" />
		<property name="keepAliveSeconds" value="${task.keep_alive_seconds}" />
	</bean>
	 
	 <!-- 配置注解定时器begin，支持多任务同时运行 -->
	 <!-- <task:annotation-driven scheduler="myScheduler"/>
	 <task:scheduler id="myScheduler" pool-size="5"></task:scheduler> -->
	 <context:annotation-config/>  
     <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
     <context:component-scan base-package="com.ruiec.server.prepareliquidation"/>
     <!-- 配置注解定时器end -->
     <!-- 配置spring aop 保存实体时保存保存时间 -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true"></aop:aspectj-autoproxy> -->
	<aop:aspectj-autoproxy proxy-target-class="false" />
	<bean class="com.ruiec.web.util.AdminControllerAspect"></bean>
</beans>    
